package edu.brandeis.bostonaccessibleroutes.ws.RESTmodel.eo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 30 15:57:54 EST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AprRoadconditionImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Id,
        LocalId,
        AppCode,
        Username,
        TimeStamp,
        RoadConditionId,
        ImageUrl,
        VoiceUrl,
        Cmnt,
        GpsLong,
        GpsLat;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ID = AttributesEnum.Id.index();
    public static final int LOCALID = AttributesEnum.LocalId.index();
    public static final int APPCODE = AttributesEnum.AppCode.index();
    public static final int USERNAME = AttributesEnum.Username.index();
    public static final int TIMESTAMP = AttributesEnum.TimeStamp.index();
    public static final int ROADCONDITIONID = AttributesEnum.RoadConditionId.index();
    public static final int IMAGEURL = AttributesEnum.ImageUrl.index();
    public static final int VOICEURL = AttributesEnum.VoiceUrl.index();
    public static final int CMNT = AttributesEnum.Cmnt.index();
    public static final int GPSLONG = AttributesEnum.GpsLong.index();
    public static final int GPSLAT = AttributesEnum.GpsLat.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AprRoadconditionImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("edu.brandeis.bostonaccessibleroutes.ws.RESTmodel.eo.AprRoadcondition");
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public DBSequence getId() {
        return (DBSequence) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(DBSequence value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for LocalId, using the alias name LocalId.
     * @return the value of LocalId
     */
    public BigDecimal getLocalId() {
        return (BigDecimal) getAttributeInternal(LOCALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocalId.
     * @param value value to set the LocalId
     */
    public void setLocalId(BigDecimal value) {
        setAttributeInternal(LOCALID, value);
    }

    /**
     * Gets the attribute value for AppCode, using the alias name AppCode.
     * @return the value of AppCode
     */
    public String getAppCode() {
        return (String) getAttributeInternal(APPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AppCode.
     * @param value value to set the AppCode
     */
    public void setAppCode(String value) {
        setAttributeInternal(APPCODE, value);
    }

    /**
     * Gets the attribute value for Username, using the alias name Username.
     * @return the value of Username
     */
    public String getUsername() {
        return (String) getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Username.
     * @param value value to set the Username
     */
    public void setUsername(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for TimeStamp, using the alias name TimeStamp.
     * @return the value of TimeStamp
     */
    public Timestamp getTimeStamp() {
        return (Timestamp) getAttributeInternal(TIMESTAMP);
    }

    /**
     * Sets <code>value</code> as the attribute value for TimeStamp.
     * @param value value to set the TimeStamp
     */
    public void setTimeStamp(Timestamp value) {
        setAttributeInternal(TIMESTAMP, value);
    }

    /**
     * Gets the attribute value for RoadConditionId, using the alias name RoadConditionId.
     * @return the value of RoadConditionId
     */
    public BigDecimal getRoadConditionId() {
        return (BigDecimal) getAttributeInternal(ROADCONDITIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RoadConditionId.
     * @param value value to set the RoadConditionId
     */
    public void setRoadConditionId(BigDecimal value) {
        setAttributeInternal(ROADCONDITIONID, value);
    }

    /**
     * Gets the attribute value for ImageUrl, using the alias name ImageUrl.
     * @return the value of ImageUrl
     */
    public String getImageUrl() {
        return (String) getAttributeInternal(IMAGEURL);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImageUrl.
     * @param value value to set the ImageUrl
     */
    public void setImageUrl(String value) {
        setAttributeInternal(IMAGEURL, value);
    }

    /**
     * Gets the attribute value for VoiceUrl, using the alias name VoiceUrl.
     * @return the value of VoiceUrl
     */
    public String getVoiceUrl() {
        return (String) getAttributeInternal(VOICEURL);
    }

    /**
     * Sets <code>value</code> as the attribute value for VoiceUrl.
     * @param value value to set the VoiceUrl
     */
    public void setVoiceUrl(String value) {
        setAttributeInternal(VOICEURL, value);
    }

    /**
     * Gets the attribute value for Cmnt, using the alias name Cmnt.
     * @return the value of Cmnt
     */
    public String getCmnt() {
        return (String) getAttributeInternal(CMNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cmnt.
     * @param value value to set the Cmnt
     */
    public void setCmnt(String value) {
        setAttributeInternal(CMNT, value);
    }

    /**
     * Gets the attribute value for GpsLong, using the alias name GpsLong.
     * @return the value of GpsLong
     */
    public BigDecimal getGpsLong() {
        return (BigDecimal) getAttributeInternal(GPSLONG);
    }

    /**
     * Sets <code>value</code> as the attribute value for GpsLong.
     * @param value value to set the GpsLong
     */
    public void setGpsLong(BigDecimal value) {
        setAttributeInternal(GPSLONG, value);
    }

    /**
     * Gets the attribute value for GpsLat, using the alias name GpsLat.
     * @return the value of GpsLat
     */
    public BigDecimal getGpsLat() {
        return (BigDecimal) getAttributeInternal(GPSLAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for GpsLat.
     * @param value value to set the GpsLat
     */
    public void setGpsLat(BigDecimal value) {
        setAttributeInternal(GPSLAT, value);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence id) {
        return new Key(new Object[] { id });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

